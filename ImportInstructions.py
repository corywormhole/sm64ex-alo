This file will contain instructions on how to import RM2C data into the sm64ex-alo repo.
First you should always copy the exported folders (/src,/levels,/sound,/text,/textures,/actors) into your repo.
Then make sure you set RM2C inside the makefile to 1
Then to build for PC use this input to terminal: "make clean && make RM2CPC"
Then to build for N64 use this input to terminal: "make clean && make -j4"
By default, due to their high variability and unique names, no actor data will be included from RM2C output, you must
go per actor and either copy data from a custom.model.inc.c file to the model.inc.c file, or change the includes in group files.

Level specific models will go into a folder inside of /actors/ with the name of the level they belong to. You must copy these folders
over to their level folders. The directory should match the target level dir, and not overwrite any files. Textures should be pre written
to the target level directories.

If you have exported custom behaviors, check the /data/ folder for exported custom behaviors with labels, and associated disassembled functions with matching labels.
These are provided for reference only, they must be manually integrated into the repo.

Below are some warnings generated by RM2C during extraction.
It is expected to have many warnings for editor files and for roms with lots of custom content.

******************************************************************************************

Objects without references must have behaviors created for them, be given an existing behavior, or be commented out.
#I've added all of these to custom.behavior_data.inc.h but there are more objects with custom behaviors
#that overwrite known labels. Almost all of them are just moving solid platforms, are just require new behaviors though.
 Level castle_inside Area 1 has object  Bhv_Custom_0x00402400 with no known label.
 Level bbh Area 1 has object  Bhv_Custom_0x19001200 with no known label.
 Level bbh Area 1 has object  Bhv_Custom_0x1300012c with no known label.
 Level bbh Area 1 has object  Bhv_Custom_0x13000684 with no known label.
 Level ssl Area 1 has object  Bhv_Custom_0x1300496c with no known label.
 Level wdw Area 1 has object  Bhv_Custom_0x13004cc8 with no known label.
 Level thi Area 1 has object  Bhv_Custom_0x13001e68 with no known label.
 Level thi Area 1 has object  Bhv_Custom_0x13000fc0 with no known label.
 Level castle_grounds Area 1 has object  Bhv_Custom_0x00402400 with no known label.
 Level ddd Area 1 has object  Bhv_Custom_0x13004854 with no known label.
 Level castle_courtyard Area 1 has object  Bhv_Custom_0x00402400 with no known label.
 Level totwc Area 1 has object  Bhv_Custom_0x13005664 with no known label.
******************************************************************************************

Levels with fog in sm64 editor and likely early versions of Rom Manager are completely broken and destroy the levels graphics and most non opaque objects.
I attempt to auto fix these, if there is any issue in these levels check fog first.
#combiners replaced with proper ones for all levels, may cause issues in these levels. Geo layers in these levels
#also changed.
 Level bbh Display List DL_bbh_1_0xe02c140 has fog, for editor, fog DLs are heavily edited, potential for gfx errors.
 Level sl Display List DL_sl_1_0xe0223f0 has fog, for editor, fog DLs are heavily edited, potential for gfx errors.
 Level thi Display List DL_thi_1_0xe034780 has fog, for editor, fog DLs are heavily edited, potential for gfx errors.
 Level bitdw Display List DL_bitdw_1_0xe018ae0 has fog, for editor, fog DLs are heavily edited, potential for gfx errors.
 Level vcutm Display List DL_vcutm_1_0xe01bf70 has fog, for editor, fog DLs are heavily edited, potential for gfx errors.
 Level bitfs Display List DL_bitfs_1_0xe03a9d0 has fog, for editor, fog DLs are heavily edited, potential for gfx errors.
 Level ending Display List DL_ending_1_0xe063110 has fog, for editor, fog DLs are heavily edited, potential for gfx errors.
 Level pss Display List DL_pss_1_0xe01d1f0 has fog, for editor, fog DLs are heavily edited, potential for gfx errors.
 Level cotmc Display List DL_cotmc_1_0xe04b2b0 has fog, for editor, fog DLs are heavily edited, potential for gfx errors.
 Level bowser_1 Display List DL_bowser_1_1_0xe01d3c0 has fog, for editor, fog DLs are heavily edited, potential for gfx errors.

*****************************************************************************
Collision models are loaded via behavior, not alongside the model. This means it can be more difficult to detect where exactly the collision belongs.
I attempt to guess based on what model the collision is first used with, but if I'm not sure, it will be logged here.

 Collision geo_bbh_0005C8 in folder bbh/tilting_trap_platform is unkown. Used with Behavior Bhv_Custom_0x13001e68.
 Collision geo_bbh_000640 in folder bbh/merry_go_round is unkown. Used with Behavior Bhv_Custom_0x13000fc0.
 Collision ddd_geo_000478 in folder ddd/sub_door is unkown. Used with Behavior Bhv_Custom_0x13004854.
 Collision dorrie_geo in folder dorrie is unkown. Used with Behavior Bhv_Custom_0x13005664.

Known methods of crashing:
*****************************************************************************
ALL BUILDS
IF CRASH ON BOOT - CHECK SEQUENCES
IF TITLE SCREEN LOOP - CHECK START LEVEL IN TWEAKS.INC.C
IF TEXTURES ARE MESSED UP - ALWAYS CHECK LEVEL FOG FIRST
IF ONLY ALPHA TEXTURES MESSED UP - MOVE FOG GEO LAYOUT TO LAYER 1/4 FROM 4/6
IF CRASH UPON ENTERING A LEVEL, CHECK OBJECTS. IF EDITOR, CHECK SCROLLS FIRST. IF NO OBJECTS BAD CHECK SEQUENCES
*****************************************************************************
N64 BUILD
IF SURFACE NODE POOOL OR SURFACE POOL FULL - ADD MORE TRIS TO EXT BOUNDS.H
IF CRASH ON STAR SELECT - PUSH FORWARD GODDARD SEGMENT IN SEGMENTS.H
*****************************************************************************

MORE ON AUDIO ERRORS:
On N64 build, a lack of proper audio memory allocation will instantly crash the game. If this happens, extend gAudioHeap in buffers.c
If you have issues with certain m64s sounding garbled, extend gAlBankSets in load.c (line 2000 about).
If sound cuts out at certain points, extend values in gAudioSessionPresets.
On all builds, if an out of bounds array access happens (often with high sequence numbers) the game will crash or have audio issues.
